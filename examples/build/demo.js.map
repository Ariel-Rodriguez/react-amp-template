{"version":3,"sources":["../src/demo.js"],"names":["style","create","social","padding","SampleApp","value","type","content","startServer","html","createServer","request","response","writeHeader","write","end","listen","on","err","socket","console","log","rampt","ampValidations","template","head","title","canonical","renderStatic","then","catch","error"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;AAIA;;;;;;AAGoB;;AAEpB;AACA,IAAMA,QAAQ,wBAAWC,MAAX,CAAkB;AAC9BC,UAAQ,EAAEC,SAAS,MAAX;AADsB,CAAlB,CAAd;;AAIA;AAXiC;;YAyBzB;AACE,QAAK,OADP;AAEE,SAAM,IAFR;AAGE,UAAO;AAHT,E;;AAbR,IAAMC,YAAY,SAAZA,SAAY,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC/B;AACA;AACA,sBAAU,kBAAV,EAA6B,KAA7B;AACA,oBAAQ,CACN,EAAEC,MAAM,MAAR,EAAgBC,SAAS,EAAE,WAAW,WAAb,EAAzB,EADM,EAEN,EAAED,MAAM,MAAR,EAAgBC,SAAS,EAAE,OAAO,aAAT,EAAzB,EAFM,CAAR;;AAKA,SACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAWF;AAAX,KADF;AAEE;AAAA;AAAA,QAAG,WAAW,sBAAIL,MAAME,MAAV,CAAd;AAAA;AAAA;AAFF,GADF;AAYD,CArBD;;AAwBO,IAAMM,oCAAc,SAAdA,WAAc,CAACC,IAAD,EAAU;AACnC,iBAAKC,YAAL,CAAkB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACvCA,aAASC,WAAT,CAAqB,GAArB,EAA0B,EAAE,gBAAgB,WAAlB,EAA1B;AACAD,aAASE,KAAT,CAAeL,IAAf;AACAG,aAASG,GAAT;AACD,GAJD,EAKCC,MALD,CAKQ,IALR,EAMCC,EAND,CAMI,aANJ,EAMmB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAClCA,WAAOJ,GAAP,CAAW,kCAAX;AACD,GARD;AASAK,UAAQC,GAAR,CAAY,wBAAZ;AACD,CAXM;;AAcP,IAAMC,QAAQ,kBAAU;AACtBC,kBAAgB,IADM,EACA;AACtBC,YAAU;AACRC,UAAM;AACJC,aAAO,kBADH;AAEJC,iBAAW;AAFP;AADE;AAFY,CAAV,CAAd;;AAUA;;;;;;AAMAL,MACCM,YADD,CACc,8BAAC,SAAD,IAAW,OAAM,OAAjB,GADd,EAECC,IAFD,CAEMrB,WAFN,EAGCsB,KAHD,CAGOV,QAAQW,KAHf","file":"demo.js","sourcesContent":["import http from 'http';\nimport React from 'react';\nimport {\n  StyleSheet,\n  css,\n} from 'aphrodite/no-important'; // Is very important to import no-important!\nimport RAMPT, {\n  addScript, // Fancy way to append amp-scripts into document's head\n  addMeta,\n} from '../../lib'; // react-amp-template\n\n// --- MODULAR-CSS ---\nconst style = StyleSheet.create({\n  social: { padding: '10px' },\n});\n\n// --- REACT + CSUTOM-TAGS ---\nconst SampleApp = ({ value }) => {\n  // --- CUSTOM-SCRIPTS ---\n  // Notify to include amp-social-share.\n  addScript('amp-social-share','2.0');\n  addMeta([\n    { type: 'meta', content: { 'content': 'something' } },\n    { type: 'link', content: { 'rel': 'http://link' } },\n  ]);\n\n  return (\n    <div>\n      <h1>Hello {value}</h1>\n      <p className={css(style.social)}>\n        <amp-social-share\n          type=\"email\"\n          width=\"45\"\n          height=\"33\"\n        ></amp-social-share>\n      </p>\n    </div>\n  );\n};\n\n\nexport const startServer = (html) => {\n  http.createServer((request, response) => {\n    response.writeHeader(200, { 'Content-Type': 'text/html' });\n    response.write(html);\n    response.end();\n  })\n  .listen(8000)\n  .on('clientError', (err, socket) => {\n    socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n  });\n  console.log('Listening on port 8000');\n};\n\n\nconst rampt = new RAMPT({\n  ampValidations: true, // (default) validate the template with AMP Google tool.\n  template: {\n    head: {\n      title: 'react-amp-sample',\n      canonical: 'http://sample',\n    },\n  }\n})\n\n/**\n* renderStatic returns a promise which will be fulfilled\n* with a string that holds the whole HTML document ready to serve.\n* The promise will reject for any internal error.\n* Once done rendering, the promise's result will be served on port 8000.\n*/\nrampt\n.renderStatic(<SampleApp value=\"World\" />)\n.then(startServer)\n.catch(console.error);\n"]}