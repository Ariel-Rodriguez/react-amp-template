{"version":3,"sources":["../src/demo.js"],"names":["style","create","social","padding","AMP_CONFIG","head","title","canonical","SampleApp","value","startServer","html","createServer","request","response","writeHeader","write","end","listen","on","err","socket","console","log","then","catch","error"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;AAIA;;;;AAGiB;;AAEjB;AACA,IAAMA,QAAQ,wBAAWC,MAAX,CAAkB;AAC9BC,UAAQ,EAAEC,SAAS,MAAX;AADsB,CAAlB,CAAd;AAGA;AACA;AAXiC;AAYjC,kBAAQ,kBAAR;;AAEA;AACA,IAAMC,aAAa;AACjBC,QAAM,EAAEC,OAAO,kBAAT,EAA6BC,WAAW,eAAxC;AADW,CAAnB;;AAIA;;YAKM;AACE,QAAK,OADP;AAEE,SAAM,IAFR;AAGE,UAAO;AAHT,E;;AAJN,IAAMC,YAAY,SAAZA,SAAY;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAChB;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAWA;AAAX,KADF;AAEE;AAAA;AAAA,QAAG,WAAW,sBAAIT,MAAME,MAAV,CAAd;AAAA;AAAA;AAFF,GADgB;AAAA,CAAlB;;AAcO,IAAMQ,oCAAc,SAAdA,WAAc,CAACC,IAAD,EAAU;AACnC,iBAAKC,YAAL,CAAkB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACvCA,aAASC,WAAT,CAAqB,GAArB,EAA0B,EAAE,gBAAgB,WAAlB,EAA1B;AACAD,aAASE,KAAT,CAAeL,IAAf;AACAG,aAASG,GAAT;AACD,GAJD,EAKCC,MALD,CAKQ,IALR,EAMCC,EAND,CAMI,aANJ,EAMmB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAClCA,WAAOJ,GAAP,CAAW,kCAAX;AACD,GARD;AASAK,UAAQC,GAAR,CAAY,wBAAZ;AACD,CAXM;;AAaP;;;;;;AAMA,+BAAqB,8BAAC,SAAD,IAAW,OAAM,OAAjB,GAArB,EAAkDnB,UAAlD,EACCoB,IADD,CACMd,WADN,EACmBe,KADnB,CACyBH,QAAQI,KADjC","file":"demo.js","sourcesContent":["import http from 'http';\nimport React from 'react';\nimport {\n  StyleSheet,\n  css,\n} from 'aphrodite/no-important'; // Is very important to import no-important!\nimport {\n  renderToStaticMarkup,\n  scripts, // Fancy way to append amp-scripts into document's head\n} from '../lib'; // react-amp-template\n\n// --- MODULAR-CSS ---\nconst style = StyleSheet.create({\n  social: { padding: '10px' },\n});\n// --- CUSTOM-SCRIPTS ---\n// Notify to include amp-social-share.\nscripts('amp-social-share');\n\n// Minimum settings for the template.\nconst AMP_CONFIG = {\n  head: { title: 'react-amp-sample', canonical: 'http://sample' },\n};\n\n// --- REACT + CSUTOM-TAGS ---\nconst SampleApp = ({ value }) => (\n  <div>\n    <h1>Hello {value}</h1>\n    <p className={css(style.social)}>\n      <amp-social-share\n        type=\"email\"\n        width=\"45\"\n        height=\"33\"\n      ></amp-social-share>\n    </p>\n  </div>\n);\n\n\nexport const startServer = (html) => {\n  http.createServer((request, response) => {\n    response.writeHeader(200, { 'Content-Type': 'text/html' });\n    response.write(html);\n    response.end();\n  })\n  .listen(8000)\n  .on('clientError', (err, socket) => {\n    socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n  });\n  console.log('Listening on port 8000');\n};\n\n/**\n* react-amp-template returns a promise which will be fulfilled\n* with a string that holds the whole HTML document ready to serve.\n* The promise will reject for any internal error.\n* Once done rendering, the promise's result will be served on port 8000.\n*/\nrenderToStaticMarkup(<SampleApp value=\"World\" />, AMP_CONFIG)\n.then(startServer).catch(console.error);\n"]}