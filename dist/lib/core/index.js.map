{"version":3,"sources":["../../src/core/index.js"],"names":["debug","require","DEFAULTS","doctype","DOMPropertyConfig","Properties","amp","MUST_USE_PROPERTY","DOMPropertyNames","ampCustom","isCustomAttribute","attributeName","isAMP","startsWith","Core","options","settings","Object","assign","injectDOMPropertyConfig","createElementProxy","createElement","onCreateElement","bind","arguments","apply","component","props","Promise","fulfill","reject","staticMarkup","renderToStaticMarkup","error"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;;;AAEA,IAAMA,QAAQC,QAAQ,OAAR,EAAiB,MAAjB,CAAd;;AAEA,IAAMC,WAAW;AACfC,WAAS,iBADM;AAEfC,qBAAmB;AACjBC,gBAAY;AACVC,WAAK,4BAAYC,iBADP;AAEV,yBAAmB,CAFT;AAGV,oBAAc,4BAAYA;AAHhB,KADK;AAMjBC,sBAAkB;AAChB,yBAAmB,iBADH;AAEhB,0BAAoB,kBAFJ;AAGhBC,iBAAW;AAHK,KAND;AAWjBC,uBAAmB,2BAACC,aAAD,EAAmB;AACpC,UAAMC,QAAQD,cAAcE,UAAd,CAAyB,KAAzB,CAAd;AACA;AACA,UAAID,KAAJ,EAAWZ,MAAM,UAAN,EAAkBW,aAAlB;AACX,aAAOC,KAAP;AACD;AAhBgB;AAFJ,CAAjB;;IAsBME,I;AACJ,gBAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKC,QAAL,GAAgBC,OAAOC,MAAP,CAAc,EAAd,EAAkBH,OAAlB,EAA2Bb,QAA3B,CAAhB;AACAF,UAAM,8BAAN;AACA,gCAAYmB,uBAAZ,CAAoC,KAAKH,QAAL,CAAcZ,iBAAlD;AACA,SAAKgB,kBAAL,GAA0B,gBAAMC,aAAhC;AACA,oBAAMA,aAAN,GAAsB,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAtB;AACD;;;;sCAEiB;AAChBvB,YAAM,oBAAN,EAA4BwB,SAA5B;AACA,aAAO,KAAKJ,kBAAL,CAAwBK,KAAxB,CAA8B,IAA9B,EAAoCD,SAApC,CAAP;AACD;;;2BAEME,S,EAAWC,K,EAAO;AAAA;;AACvB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAI;AACF,cAAIC,eAAe,MAAKf,QAAL,CAAcb,OAAjC;AACA,cAAI;AACF4B,4BAAgB,iBAAeC,oBAAf,CACd;AAAA;AAAcL,mBAAd;AACGD;AADH,aADc,CAAhB;AAKA,mBAAOG,QAAQE,YAAR,CAAP;AACD,WAPD,CAOE,OAAOE,KAAP,EAAc;AACd,mBAAOH,OAAOG,KAAP,CAAP;AACD;AACF,SAZD,CAYE,OAAOA,KAAP,EAAc;AACd,iBAAOH,OAAOG,KAAP,CAAP;AACD,SAdD,SAcU;AACRjC,gBAAM,gBAAN;AACD;AACF,OAlBM,CAAP;AAmBD;;;;;;kBAGYc,I","file":"index.js","sourcesContent":["import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { DOMProperty } from 'react-dom/lib/ReactInjection';\nimport Template from '../template';\n\nconst debug = require('debug')('core');\n\nconst DEFAULTS = {\n  doctype: '<!DOCTYPE html>',\n  DOMPropertyConfig: {\n    Properties: {\n      amp: DOMProperty.MUST_USE_PROPERTY,\n      'amp-boilerplate': 0,\n      'amp-custom': DOMProperty.MUST_USE_PROPERTY,\n    },\n    DOMPropertyNames: {\n      'amp-boilerplate': 'amp-boilerplate',\n      'amp-social-share': 'amp-social-share',\n      ampCustom: 'amp-custom',\n    },\n    isCustomAttribute: (attributeName) => {\n      const isAMP = attributeName.startsWith('amp');\n      debugger;\n      if (isAMP) debug('AHHHHHHH', attributeName);\n      return isAMP;\n    },\n  },\n};\n\nclass Core {\n  constructor(options) {\n    this.settings = Object.assign({}, options, DEFAULTS);\n    debug('Injecting AMP DOMProperties.');\n    DOMProperty.injectDOMPropertyConfig(this.settings.DOMPropertyConfig);\n    this.createElementProxy = React.createElement;\n    React.createElement = this.onCreateElement.bind(this);\n  }\n\n  onCreateElement() {\n    debug('Creating element!!', arguments);\n    return this.createElementProxy.apply(null, arguments);\n  }\n\n  render(component, props) {\n    return new Promise((fulfill, reject) => {\n      try {\n        let staticMarkup = this.settings.doctype;\n        try {\n          staticMarkup += ReactDOMServer.renderToStaticMarkup(\n            <Template {...props}>\n              {component}\n            </Template>\n          );\n          return fulfill(staticMarkup);\n        } catch (error) {\n          return reject(error);\n        }\n      } catch (error) {\n        return reject(error);\n      } finally {\n        debug('render finish.');\n      }\n    });\n  }\n}\n\nexport default Core;\n"]}