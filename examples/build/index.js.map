{"version":3,"sources":["../src/index.js"],"names":["debug","require","error","startServer","html","createServer","request","response","writeHeader","write","end","listen","on","err","socket","config","catch","then"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA,IAAMA,QAAQC,QAAQ,OAAR,EAAiB,gBAAjB,CAAd;AACA,IAAMC,QAAQD,QAAQ,OAAR,EAAiB,sBAAjB,CAAd;;AAEA,IAAME,cAAc,SAAdA,WAAc,CAACC,IAAD,EAAU;AAC5B,iBAAKC,YAAL,CAAkB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACvCA,aAASC,WAAT,CAAqB,GAArB,EAA0B,EAAE,gBAAgB,WAAlB,EAA1B;AACAD,aAASE,KAAT,CAAeL,IAAf;AACAG,aAASG,GAAT;AACD,GAJD,EAKCC,MALD,CAKQ,IALR,EAMCC,EAND,CAMI,aANJ,EAMmB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAClCA,WAAOJ,GAAP,CAAW,kCAAX;AACAR,UAAMW,GAAN;AACD,GATD;AAUAb,QAAM,wBAAN;AACD,CAZD;;AAcA;;;;;;AAMA,+BACE,+CAAK,YAAW,oBAAhB,GADF,EAC2C,cAAIe,MAD/C,EAEEC,KAFF,CAEQd,KAFR,EAEee,IAFf,CAEoBd,WAFpB","file":"index.js","sourcesContent":["import http from 'http';\nimport React from 'react';\nimport App from './app';\nimport { renderToStaticMarkup } from '../../lib';\nconst debug = require('debug')('example:server');\nconst error = require('debug')('example:server:error');\n\nconst startServer = (html) => {\n  http.createServer((request, response) => {\n    response.writeHeader(200, { 'Content-Type': 'text/html' });\n    response.write(html);\n    response.end();\n  })\n  .listen(8000)\n  .on('clientError', (err, socket) => {\n    socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n    error(err);\n  });\n  debug('Listening on port 8000');\n};\n\n/**\n* react-amp-template returns a promise which will be fulfilled\n* with a string that holds the whole HTML document ready to serve.\n* The promise will reject for any internal error.\n* Once done rendering, proceed to create the server.\n*/\nrenderToStaticMarkup(\n  <App bannerText=\"React-AMP-Template\" />, App.config\n).catch(error).then(startServer);\n"]}