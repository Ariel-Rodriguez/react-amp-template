{"version":3,"sources":["../../src/core/index.js"],"names":["debug","require","DEFAULTS","doctype","DOMPropertyConfig","Properties","amp","MUST_USE_PROPERTY","isCustomAttribute","attributeName","startsWith","Core","options","settings","injectDOMPropertyConfig","render","renderToFile","component","renderStatic","renderToStaticMarkup","head","html","Promise","fulfill","reject","aphrodite","css","document","customStyles","content","error","file","toRender","then","staticMarkup","writeFileSync","err","Error"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;;;;;;;AACA,IAAMA,QAAQC,QAAQ,OAAR,EAAiB,MAAjB,CAAd;;AAEA,IAAMC,WAAW;AACfC,WAAS,iBADM;AAEfC,qBAAmB;AACjBC,gBAAY;AACVC,WAAK,4BAAYC,iBADP;AAEV,yBAAmB,4BAAYA,iBAFrB;AAGV,oBAAc,4BAAYA,iBAHhB;AAIV,wBAAkB,4BAAYA;AAJpB,KADK;AAOjBC,uBAAmB,2BAACC,aAAD;AAAA,aAAmBA,cAAcC,UAAd,CAAyB,KAAzB,CAAnB;AAAA;AAPF;AAFJ,CAAjB;;IAaMC,I;AACJ,gBAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKC,QAAL,gBACKX,QADL;AAEEU;AAFF;AAIAZ,UAAM,8BAAN;AACA,gCAAYc,uBAAZ,CAAoC,KAAKD,QAAL,CAAcT,iBAAlD;AACA,SAAKW,MAAL,GAAgB,KAAKA,MAArB,MAAgB,IAAhB;AACA,SAAKC,YAAL,GAAsB,KAAKA,YAA3B,MAAsB,IAAtB;AACD;;;;8BAESC,S,EAAW;AACnB,aAAO,8BAAiBC,YAAjB,CAA8B;AAAA,eACnC,iBAAeC,oBAAf,CAAoCF,SAApC,CADmC;AAAA,OAA9B,CAAP;AAGD;;;2BAEMA,S,QAA2B;AAAA;;AAAA,UAAdG,IAAc,QAAdA,IAAc;AAAA,UAARC,IAAQ,QAARA,IAAQ;;AAChC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAI;AACF,cAAI;AAAA,6BACc,MAAKC,SAAL,CAAeR,SAAf,CADd;AAAA,gBACMS,GADN,cACMA,GADN;;AAEF,gBAAMC,WAAW,iBAAeR,oBAAf,CACf;AAAA;AAAA;AACE,mCAAWC,IAAX,IAAiBQ,cAAcF,IAAIG,OAAnC,GADF;AAEE,sBAAMR;AAFR;AAIGJ;AAJH,aADe,CAAjB;AAQA,mBAAOM,QAAQ,MAAKV,QAAL,CAAcV,OAAd,GAAwBwB,QAAhC,CAAP;AACD,WAXD,CAWE,OAAOG,KAAP,EAAc;AACd,mBAAON,OAAOM,KAAP,CAAP;AACD;AACF,SAfD,CAeE,OAAOA,KAAP,EAAc;AACd,iBAAON,OAAOM,KAAP,CAAP;AACD,SAjBD,SAiBU;AACR9B,gBAAM,gBAAN;AACD;AACF,OArBM,CAAP;AAsBD;;;iCAEY+B,I,EAAmB;AAAA,wCAAVC,QAAU;AAAVA,gBAAU;AAAA;;AAC9B,aAAO,KAAKjB,MAAL,aAAeiB,QAAf,EACNC,IADM,CACD,UAACC,YAAD,EAAkB;AACtB,YAAI;AACF,uBAAGC,aAAH,CAAiBJ,IAAjB,EAAuBG,YAAvB;AACA,iBAAOA,YAAP;AACD,SAHD,CAGE,OAAOE,GAAP,EAAY;AACZ,gBAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD;AACF,OARM,CAAP;AASD;;;;;;kBAGYzB,I","file":"index.js","sourcesContent":["import fs from 'fs';\nimport React from 'react';\nimport { StyleSheetServer } from 'aphrodite/no-important';\nimport ReactDOMServer from 'react-dom/server';\nimport { DOMProperty } from 'react-dom/lib/ReactInjection';\nimport Template from '../template';\nconst debug = require('debug')('core');\n\nconst DEFAULTS = {\n  doctype: '<!DOCTYPE html>',\n  DOMPropertyConfig: {\n    Properties: {\n      amp: DOMProperty.MUST_USE_PROPERTY,\n      'amp-boilerplate': DOMProperty.MUST_USE_PROPERTY,\n      'amp-custom': DOMProperty.MUST_USE_PROPERTY,\n      'custom-element': DOMProperty.MUST_USE_PROPERTY,\n    },\n    isCustomAttribute: (attributeName) => attributeName.startsWith('amp'),\n  },\n};\n\nclass Core {\n  constructor(options) {\n    this.settings = {\n      ...DEFAULTS,\n      options,\n    };\n    debug('Injecting AMP DOMProperties.');\n    DOMProperty.injectDOMPropertyConfig(this.settings.DOMPropertyConfig);\n    this.render = ::this.render;\n    this.renderToFile = ::this.renderToFile;\n  }\n\n  aphrodite(component) {\n    return StyleSheetServer.renderStatic(() =>\n      ReactDOMServer.renderToStaticMarkup(component)\n    );\n  }\n\n  render(component, { head, html }) {\n    return new Promise((fulfill, reject) => {\n      try {\n        try {\n          const { css } = this.aphrodite(component);\n          const document = ReactDOMServer.renderToStaticMarkup(\n            <Template\n              head={{ ...head, customStyles: css.content }}\n              html={html}\n            >\n              {component}\n            </Template>\n          );\n          return fulfill(this.settings.doctype + document);\n        } catch (error) {\n          return reject(error);\n        }\n      } catch (error) {\n        return reject(error);\n      } finally {\n        debug('render finish.');\n      }\n    });\n  }\n\n  renderToFile(file, ...toRender) {\n    return this.render(...toRender)\n    .then((staticMarkup) => {\n      try {\n        fs.writeFileSync(file, staticMarkup);\n        return staticMarkup;\n      } catch (err) {\n        throw new Error(err);\n      }\n    });\n  }\n}\n\nexport default Core;\n"]}