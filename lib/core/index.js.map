{"version":3,"sources":["../../src/core/index.js"],"names":["debug","require","DEFAULTS","doctype","DOMPropertyConfig","Properties","amp","MUST_USE_PROPERTY","isCustomAttribute","attributeName","startsWith","Core","options","settings","Object","assign","injectDOMPropertyConfig","component","props","Promise","fulfill","reject","staticMarkup","renderToStaticMarkup","error"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;;;AAEA,IAAMA,QAAQC,QAAQ,OAAR,EAAiB,MAAjB,CAAd;;AAEA,IAAMC,WAAW;AACfC,WAAS,iBADM;AAEfC,qBAAmB;AACjBC,gBAAY;AACVC,WAAK,4BAAYC,iBADP;AAEV,yBAAmB,4BAAYA,iBAFrB;AAGV,oBAAc,4BAAYA;AAHhB,KADK;AAMjBC,uBAAmB,2BAACC,aAAD;AAAA,aAAmBA,cAAcC,UAAd,CAAyB,KAAzB,CAAnB;AAAA;AANF;AAFJ,CAAjB;;IAYMC,I;AACJ,gBAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKC,QAAL,GAAgBC,OAAOC,MAAP,CAAc,EAAd,EAAkBH,OAAlB,EAA2BV,QAA3B,CAAhB;AACAF,UAAM,8BAAN;AACA,gCAAYgB,uBAAZ,CAAoC,KAAKH,QAAL,CAAcT,iBAAlD;AACD;;;;2BAEMa,S,EAAWC,K,EAAO;AAAA;;AACvB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAI;AACF,cAAIC,eAAe,MAAKT,QAAL,CAAcV,OAAjC;AACA,cAAI;AACFmB,4BAAgB,iBAAeC,oBAAf,CACd;AAAA;AAAcL,mBAAd;AACCD;AADD,aADc,CAAhB;AAKA,mBAAOG,QAAQE,YAAR,CAAP;AACD,WAPD,CAOE,OAAOE,KAAP,EAAc;AACd,mBAAOH,OAAOG,KAAP,CAAP;AACD;AACF,SAZD,CAYE,OAAOA,KAAP,EAAc;AACd,iBAAOH,OAAOG,KAAP,CAAP;AACD,SAdD,SAcU;AACRxB,gBAAM,gBAAN;AACD;AACF,OAlBM,CAAP;AAmBD;;;;;;kBAGYW,I","file":"index.js","sourcesContent":["import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { DOMProperty } from 'react-dom/lib/ReactInjection';\nimport Template from '../template';\n\nconst debug = require('debug')('core');\n\nconst DEFAULTS = {\n  doctype: '<!DOCTYPE html>',\n  DOMPropertyConfig: {\n    Properties: {\n      amp: DOMProperty.MUST_USE_PROPERTY,\n      'amp-boilerplate': DOMProperty.MUST_USE_PROPERTY,\n      'amp-custom': DOMProperty.MUST_USE_PROPERTY,\n    },\n    isCustomAttribute: (attributeName) => attributeName.startsWith('amp'),\n  },\n};\n\nclass Core {\n  constructor(options) {\n    this.settings = Object.assign({}, options, DEFAULTS);\n    debug('Injecting AMP DOMProperties.');\n    DOMProperty.injectDOMPropertyConfig(this.settings.DOMPropertyConfig);\n  }\n\n  render(component, props) {\n    return new Promise((fulfill, reject) => {\n      try {\n        let staticMarkup = this.settings.doctype;\n        try {\n          staticMarkup += ReactDOMServer.renderToStaticMarkup(\n            <Template {...props}>\n            {component}\n            </Template>\n          );\n          return fulfill(staticMarkup);\n        } catch (error) {\n          return reject(error);\n        }\n      } catch (error) {\n        return reject(error);\n      } finally {\n        debug('render finish.');\n      }\n    });\n  }\n}\n\nexport default Core;\n"]}